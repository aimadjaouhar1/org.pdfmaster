name: org.pdfmaster CI

on:
  push:
    branches:
      - prod

  pull_request:
    branches:
      - prod

jobs:

  # build-push:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0

  #     - name: Extract version number
  #       run: |
  #         # Extract the version number
  #         commit_message=$(git log -1 --pretty=%B)

  #         version=$(echo "$commit_message" | grep -oP 'prod/v\K[0-9]+\.[0-9]+\.[0-9]+')

  #         echo "build version number: $version"
  #         echo "VERSION=$version" >> $GITHUB_ENV

  #     - uses: pnpm/action-setup@v2
  #       with:
  #         version: 8
  #     - run: pnpm install
        
  #       name: Build nx project web
  #     - run: pnpm nx build web

  #       name: Set up QEMU
  #     - uses: docker/setup-qemu-action@v3
      
  #       name: Set up Docker Buildx
  #     - uses: docker/setup-buildx-action@v3
      
  #       name: Login to Docker Hub
  #     - uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_PASSWORD }}
      
  #       name: Build and push web
  #     - uses: docker/build-push-action@v5
  #       with:
  #         context: "."
  #         file: ./docker/web.Dockerfile
  #         push: true
  #         tags: aimadjaouhar/org.pdfmaster:web-${{ env.VERSION }}
  
  deploy:
    name: Deploy to server
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      
      - name: Terraform Init
        id: init
        run: terraform -chdir="./terraform" init

      - name: Terraform Validate
        id: validate
        run: terraform -chdir="./terraform" validate -no-color
      
      - name: Terraform Plan
        id: plan
        run: terraform -chdir="./terraform" plan -var="AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" -var="AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" 
            -var="AWS_REGION=${{ vars.AWS_REGION }}" -var="KEY_NAME=${{ vars.KEY_NAME }}" -var="DOMAIN_NAME=${{ vars.DOMAIN_NAME }}" -var="ROUTE53_ZONE_ID=${{ vars.ROUTE53_ZONE_ID }}" -var="WORK_DIR=${{ github.workspace }}" -no-color

      - name: Terraform destroy
        run: terraform -chdir="./terraform" destroy -var="AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" -var="AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" 
            -var="AWS_REGION=${{ vars.AWS_REGION }}" -var="KEY_NAME=${{ vars.KEY_NAME }}" -var="DOMAIN_NAME=${{ vars.DOMAIN_NAME }}" -var="ROUTE53_ZONE_ID=${{ vars.ROUTE53_ZONE_ID }}" -var="WORK_DIR=${{ github.workspace }}" -auto-approve


      - name: Terraform Apply
        run: terraform -chdir="./terraform" apply -var="AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" -var="AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" 
            -var="AWS_REGION=${{ vars.AWS_REGION }}" -var="KEY_NAME=${{ vars.KEY_NAME }}" -var="DOMAIN_NAME=${{ vars.DOMAIN_NAME }}" -var="ROUTE53_ZONE_ID=${{ vars.ROUTE53_ZONE_ID }}" -var="WORK_DIR=${{ github.workspace }}" -auto-approve

      - name: Play Ansible Playbook
        uses: arillso/action.playbook@master
        with:
          playbook: ./ansible/playbooks/deploy.yml
          inventory: ./ansible/playbooks/dynamic_inventory.ini